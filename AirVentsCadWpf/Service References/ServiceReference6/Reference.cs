//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AirVentsCadWpf.ServiceReference6 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Connection.ClassifierMeasure", Namespace="http://schemas.datacontract.org/2004/07/ConecctorOneC")]
    [System.SerializableAttribute()]
    public partial class ConnectionClassifierMeasure : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionFullField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionFull {
            get {
                return this.DescriptionFullField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionFullField, value) != true)) {
                    this.DescriptionFullField = value;
                    this.RaisePropertyChanged("DescriptionFull");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Connection.Nomenclature", Namespace="http://schemas.datacontract.org/2004/07/ConecctorOneC")]
    [System.SerializableAttribute()]
    public partial class ConnectionNomenclature : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EPDM.SearchColumnName", Namespace="http://schemas.datacontract.org/2004/07/HostingWindowsForms")]
    [System.SerializableAttribute()]
    public partial class EPDMSearchColumnName : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FolderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileId {
            get {
                return this.FileIdField;
            }
            set {
                if ((this.FileIdField.Equals(value) != true)) {
                    this.FileIdField = value;
                    this.RaisePropertyChanged("FileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FolderId {
            get {
                return this.FolderIdField;
            }
            set {
                if ((this.FolderIdField.Equals(value) != true)) {
                    this.FolderIdField = value;
                    this.RaisePropertyChanged("FolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumber {
            get {
                return this.PartNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumberField, value) != true)) {
                    this.PartNumberField = value;
                    this.RaisePropertyChanged("PartNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EPDM.BomCells", Namespace="http://schemas.datacontract.org/2004/07/HostingWindowsForms")]
    [System.SerializableAttribute()]
    public partial class EPDMBomCells : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeMaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdPdmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SummMaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string КоличествоField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string КонфигурацияField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string МатериалField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string МатериалЦмиField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string НаименованиеField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ОбозначениеField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ПоследняяВерсияField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string РазделField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string СостояниеField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ТипФайлаField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ТолщинаЛистаField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string УровеньField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeMaterial {
            get {
                return this.CodeMaterialField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeMaterialField, value) != true)) {
                    this.CodeMaterialField = value;
                    this.RaisePropertyChanged("CodeMaterial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErpCode {
            get {
                return this.ErpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErpCodeField, value) != true)) {
                    this.ErpCodeField = value;
                    this.RaisePropertyChanged("ErpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Format {
            get {
                return this.FormatField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatField, value) != true)) {
                    this.FormatField = value;
                    this.RaisePropertyChanged("Format");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdPdm {
            get {
                return this.IdPdmField;
            }
            set {
                if ((object.ReferenceEquals(this.IdPdmField, value) != true)) {
                    this.IdPdmField = value;
                    this.RaisePropertyChanged("IdPdm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SummMaterial {
            get {
                return this.SummMaterialField;
            }
            set {
                if ((object.ReferenceEquals(this.SummMaterialField, value) != true)) {
                    this.SummMaterialField = value;
                    this.RaisePropertyChanged("SummMaterial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightField, value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Количество {
            get {
                return this.КоличествоField;
            }
            set {
                if ((object.ReferenceEquals(this.КоличествоField, value) != true)) {
                    this.КоличествоField = value;
                    this.RaisePropertyChanged("Количество");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Конфигурация {
            get {
                return this.КонфигурацияField;
            }
            set {
                if ((object.ReferenceEquals(this.КонфигурацияField, value) != true)) {
                    this.КонфигурацияField = value;
                    this.RaisePropertyChanged("Конфигурация");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Материал {
            get {
                return this.МатериалField;
            }
            set {
                if ((object.ReferenceEquals(this.МатериалField, value) != true)) {
                    this.МатериалField = value;
                    this.RaisePropertyChanged("Материал");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string МатериалЦми {
            get {
                return this.МатериалЦмиField;
            }
            set {
                if ((object.ReferenceEquals(this.МатериалЦмиField, value) != true)) {
                    this.МатериалЦмиField = value;
                    this.RaisePropertyChanged("МатериалЦми");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Наименование {
            get {
                return this.НаименованиеField;
            }
            set {
                if ((object.ReferenceEquals(this.НаименованиеField, value) != true)) {
                    this.НаименованиеField = value;
                    this.RaisePropertyChanged("Наименование");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Обозначение {
            get {
                return this.ОбозначениеField;
            }
            set {
                if ((object.ReferenceEquals(this.ОбозначениеField, value) != true)) {
                    this.ОбозначениеField = value;
                    this.RaisePropertyChanged("Обозначение");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ПоследняяВерсия {
            get {
                return this.ПоследняяВерсияField;
            }
            set {
                if ((object.ReferenceEquals(this.ПоследняяВерсияField, value) != true)) {
                    this.ПоследняяВерсияField = value;
                    this.RaisePropertyChanged("ПоследняяВерсия");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Раздел {
            get {
                return this.РазделField;
            }
            set {
                if ((object.ReferenceEquals(this.РазделField, value) != true)) {
                    this.РазделField = value;
                    this.RaisePropertyChanged("Раздел");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Состояние {
            get {
                return this.СостояниеField;
            }
            set {
                if ((object.ReferenceEquals(this.СостояниеField, value) != true)) {
                    this.СостояниеField = value;
                    this.RaisePropertyChanged("Состояние");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ТипФайла {
            get {
                return this.ТипФайлаField;
            }
            set {
                if ((object.ReferenceEquals(this.ТипФайлаField, value) != true)) {
                    this.ТипФайлаField = value;
                    this.RaisePropertyChanged("ТипФайла");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ТолщинаЛиста {
            get {
                return this.ТолщинаЛистаField;
            }
            set {
                if ((object.ReferenceEquals(this.ТолщинаЛистаField, value) != true)) {
                    this.ТолщинаЛистаField = value;
                    this.RaisePropertyChanged("ТолщинаЛиста");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Уровень {
            get {
                return this.УровеньField;
            }
            set {
                if ((object.ReferenceEquals(this.УровеньField, value) != true)) {
                    this.УровеньField = value;
                    this.RaisePropertyChanged("Уровень");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SqlQuery.TaskParam", Namespace="http://schemas.datacontract.org/2004/07/HostingWindowsForms.Data")]
    [System.SerializableAttribute()]
    public partial class SqlQueryTaskParam : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentolderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentVersion {
            get {
                return this.CurrentVersionField;
            }
            set {
                if ((this.CurrentVersionField.Equals(value) != true)) {
                    this.CurrentVersionField = value;
                    this.RaisePropertyChanged("CurrentVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileId {
            get {
                return this.FileIdField;
            }
            set {
                if ((this.FileIdField.Equals(value) != true)) {
                    this.FileIdField = value;
                    this.RaisePropertyChanged("FileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentolderId {
            get {
                return this.ParentolderIdField;
            }
            set {
                if ((this.ParentolderIdField.Equals(value) != true)) {
                    this.ParentolderIdField = value;
                    this.RaisePropertyChanged("ParentolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference6.I1cService")]
    public interface I1cService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I1cService/AuthenticationUser", ReplyAction="http://tempuri.org/I1cService/AuthenticationUserResponse")]
        bool AuthenticationUser(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I1cService/AuthenticationUser", ReplyAction="http://tempuri.org/I1cService/AuthenticationUserResponse")]
        System.Threading.Tasks.Task<bool> AuthenticationUserAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I1cService/GetClassifierMeasureList", ReplyAction="http://tempuri.org/I1cService/GetClassifierMeasureListResponse")]
        AirVentsCadWpf.ServiceReference6.ConnectionClassifierMeasure[] GetClassifierMeasureList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I1cService/GetClassifierMeasureList", ReplyAction="http://tempuri.org/I1cService/GetClassifierMeasureListResponse")]
        System.Threading.Tasks.Task<AirVentsCadWpf.ServiceReference6.ConnectionClassifierMeasure[]> GetClassifierMeasureListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I1cService/SearchNomenclatureByName", ReplyAction="http://tempuri.org/I1cService/SearchNomenclatureByNameResponse")]
        AirVentsCadWpf.ServiceReference6.ConnectionNomenclature[] SearchNomenclatureByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I1cService/SearchNomenclatureByName", ReplyAction="http://tempuri.org/I1cService/SearchNomenclatureByNameResponse")]
        System.Threading.Tasks.Task<AirVentsCadWpf.ServiceReference6.ConnectionNomenclature[]> SearchNomenclatureByNameAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface I1cServiceChannel : AirVentsCadWpf.ServiceReference6.I1cService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class I1cServiceClient : System.ServiceModel.ClientBase<AirVentsCadWpf.ServiceReference6.I1cService>, AirVentsCadWpf.ServiceReference6.I1cService {
        
        public I1cServiceClient() {
        }
        
        public I1cServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public I1cServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public I1cServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public I1cServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AuthenticationUser(string UserName, string Password) {
            return base.Channel.AuthenticationUser(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<bool> AuthenticationUserAsync(string UserName, string Password) {
            return base.Channel.AuthenticationUserAsync(UserName, Password);
        }
        
        public AirVentsCadWpf.ServiceReference6.ConnectionClassifierMeasure[] GetClassifierMeasureList() {
            return base.Channel.GetClassifierMeasureList();
        }
        
        public System.Threading.Tasks.Task<AirVentsCadWpf.ServiceReference6.ConnectionClassifierMeasure[]> GetClassifierMeasureListAsync() {
            return base.Channel.GetClassifierMeasureListAsync();
        }
        
        public AirVentsCadWpf.ServiceReference6.ConnectionNomenclature[] SearchNomenclatureByName(string name) {
            return base.Channel.SearchNomenclatureByName(name);
        }
        
        public System.Threading.Tasks.Task<AirVentsCadWpf.ServiceReference6.ConnectionNomenclature[]> SearchNomenclatureByNameAsync(string name) {
            return base.Channel.SearchNomenclatureByNameAsync(name);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference6.IEpdmService")]
    public interface IEpdmService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEpdmService/SearchDoc", ReplyAction="http://tempuri.org/IEpdmService/SearchDocResponse")]
        AirVentsCadWpf.ServiceReference6.EPDMSearchColumnName[] SearchDoc(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEpdmService/SearchDoc", ReplyAction="http://tempuri.org/IEpdmService/SearchDocResponse")]
        System.Threading.Tasks.Task<AirVentsCadWpf.ServiceReference6.EPDMSearchColumnName[]> SearchDocAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEpdmService/Bom", ReplyAction="http://tempuri.org/IEpdmService/BomResponse")]
        AirVentsCadWpf.ServiceReference6.EPDMBomCells[] Bom(string filePath, string config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEpdmService/Bom", ReplyAction="http://tempuri.org/IEpdmService/BomResponse")]
        System.Threading.Tasks.Task<AirVentsCadWpf.ServiceReference6.EPDMBomCells[]> BomAsync(string filePath, string config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEpdmService/GetConfiguration", ReplyAction="http://tempuri.org/IEpdmService/GetConfigurationResponse")]
        string[] GetConfiguration(string filePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEpdmService/GetConfiguration", ReplyAction="http://tempuri.org/IEpdmService/GetConfigurationResponse")]
        System.Threading.Tasks.Task<string[]> GetConfigurationAsync(string filePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEpdmService/GetLink", ReplyAction="http://tempuri.org/IEpdmService/GetLinkResponse")]
        string GetLink(string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEpdmService/GetLink", ReplyAction="http://tempuri.org/IEpdmService/GetLinkResponse")]
        System.Threading.Tasks.Task<string> GetLinkAsync(string fileName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEpdmServiceChannel : AirVentsCadWpf.ServiceReference6.IEpdmService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EpdmServiceClient : System.ServiceModel.ClientBase<AirVentsCadWpf.ServiceReference6.IEpdmService>, AirVentsCadWpf.ServiceReference6.IEpdmService {
        
        public EpdmServiceClient() {
        }
        
        public EpdmServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EpdmServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EpdmServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EpdmServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AirVentsCadWpf.ServiceReference6.EPDMSearchColumnName[] SearchDoc(string name) {
            return base.Channel.SearchDoc(name);
        }
        
        public System.Threading.Tasks.Task<AirVentsCadWpf.ServiceReference6.EPDMSearchColumnName[]> SearchDocAsync(string name) {
            return base.Channel.SearchDocAsync(name);
        }
        
        public AirVentsCadWpf.ServiceReference6.EPDMBomCells[] Bom(string filePath, string config) {
            return base.Channel.Bom(filePath, config);
        }
        
        public System.Threading.Tasks.Task<AirVentsCadWpf.ServiceReference6.EPDMBomCells[]> BomAsync(string filePath, string config) {
            return base.Channel.BomAsync(filePath, config);
        }
        
        public string[] GetConfiguration(string filePath) {
            return base.Channel.GetConfiguration(filePath);
        }
        
        public System.Threading.Tasks.Task<string[]> GetConfigurationAsync(string filePath) {
            return base.Channel.GetConfigurationAsync(filePath);
        }
        
        public string GetLink(string fileName) {
            return base.Channel.GetLink(fileName);
        }
        
        public System.Threading.Tasks.Task<string> GetLinkAsync(string fileName) {
            return base.Channel.GetLinkAsync(fileName);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference6.ITaskService")]
    public interface ITaskService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/AddTaskList", ReplyAction="http://tempuri.org/ITaskService/AddTaskListResponse")]
        void AddTaskList(AirVentsCadWpf.ServiceReference6.SqlQueryTaskParam[] list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskService/AddTaskList", ReplyAction="http://tempuri.org/ITaskService/AddTaskListResponse")]
        System.Threading.Tasks.Task AddTaskListAsync(AirVentsCadWpf.ServiceReference6.SqlQueryTaskParam[] list);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITaskServiceChannel : AirVentsCadWpf.ServiceReference6.ITaskService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TaskServiceClient : System.ServiceModel.ClientBase<AirVentsCadWpf.ServiceReference6.ITaskService>, AirVentsCadWpf.ServiceReference6.ITaskService {
        
        public TaskServiceClient() {
        }
        
        public TaskServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TaskServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TaskServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TaskServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddTaskList(AirVentsCadWpf.ServiceReference6.SqlQueryTaskParam[] list) {
            base.Channel.AddTaskList(list);
        }
        
        public System.Threading.Tasks.Task AddTaskListAsync(AirVentsCadWpf.ServiceReference6.SqlQueryTaskParam[] list) {
            return base.Channel.AddTaskListAsync(list);
        }
    }
}
